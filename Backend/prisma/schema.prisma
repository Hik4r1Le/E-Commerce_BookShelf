generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_DATABASE_URL")
}

enum Role {
  admin
  user
  seller
}

enum Gender {
  male
  female
  others
}

enum AddressLabel {
  home
  office
}

enum StockStatus {
  in_stock
  out_of_stock
}

enum OrderStatus {
  processing
  refunded
  shipped
  delivering
  cancelled
}

enum DiscountType {
  fixed
  percentage
}

model User {
  id             String        @id @default(uuid()) @db.VarChar(255)
  email          String?       @unique @db.VarChar(255)
  user_name      String?       @db.VarChar(255)
  password_hash  String?       @db.VarChar(255)
  role           Role?         @default(user)
  is_veryfied    Boolean?
  created_at     DateTime?     @db.Timestamp(6)
  updated_at     DateTime?     @db.Timestamp(6)
  deleted_at     DateTime?     @db.Timestamp(6)

  profile        UserProfile?   
  addresses      Address[]
  stocks         Stock[]
  carts          Cart[]
  orders         Order[]

  @@map("users")
}

model UserProfile {
  id         String   @id @default(uuid()) @db.VarChar(255)
  user_id    String   @unique @db.VarChar(255)   
  full_name  String?  @db.VarChar(255)
  dob        DateTime? @db.Date
  gender     Gender?   @default(male)
  avatar_url String?   @db.VarChar(255)

  user       User     @relation(fields: [user_id], references: [id])

  @@map("user_profiles")
}

model Address {
  id             String        @id @default(uuid()) @db.VarChar(255)
  user_id        String?       @db.VarChar(255)
  label          AddressLabel? @default(home)
  recipient_name String?       @db.VarChar(255)
  phone_number   String?       @db.VarChar(255)
  street         String?       @db.VarChar(255)
  district       String?       @db.VarChar(255)
  city           String?       @db.VarChar(255)
  is_default     Boolean?

  user           User?         @relation(fields: [user_id], references: [id])
  orderDetails   OrderDetail[]

  @@map("addresses")
}

model Stock {
  id             String       @id @default(uuid()) @db.VarChar(255)
  book_id        String?      @db.VarChar(255)
  user_id        String?      @db.VarChar(255)
  stock_quantity Int?
  stock_status   StockStatus? @default(in_stock)
  created_at     DateTime?    @db.Timestamp(6)
  updated_at     DateTime?    @db.Timestamp(6)
  deleted_at     DateTime?    @db.Timestamp(6)

  user           User?        @relation(fields: [user_id], references: [id])
  cartDetails    CartDetail[]
  orderDetails   OrderDetail[]

  @@map("stocks")
}

model Cart {
  id         String      @id @default(uuid()) @db.VarChar(255)
  user_id    String?     @db.VarChar(255)
  created_at DateTime?   @db.Timestamp(6)
  updated_at DateTime?   @db.Timestamp(6)
  deleted_at DateTime?   @db.Timestamp(6)

  user       User?       @relation(fields: [user_id], references: [id])
  cartItems  CartDetail[] @relation("CartToCartDetails")

  @@map("carts")
}

model CartDetail {
  id           String   @id @default(uuid()) @db.VarChar(255)
  cart_id      String?  @db.VarChar(255)
  stock_id     String?  @db.VarChar(255)
  book_id      String?  @db.VarChar(255)
  quantity     Int?
  price_at_add Decimal? @db.Decimal(10, 2)

  cart         Cart?    @relation("CartToCartDetails", fields: [cart_id], references: [id])
  stock        Stock?   @relation(fields: [stock_id], references: [id])

  @@map("cart_details")
}

model Order {
  id         String        @id @default(uuid()) @db.VarChar(255)
  user_id    String?       @db.VarChar(255)
  created_at DateTime?     @db.Timestamp(6)
  updated_at DateTime?     @db.Timestamp(6)
  deleted_at DateTime?     @db.Timestamp(6)

  user       User?         @relation(fields: [user_id], references: [id])
  details    OrderDetail[]

  @@map("orders")
}

model OrderDetail {
  id           String   @id @default(uuid()) @db.VarChar(255)
  order_id     String?  @db.VarChar(255)
  book_id      String?  @db.VarChar(255)
  address_id   String?  @db.VarChar(255)
  coupon_id    String?  @db.VarChar(255)
  stock_id     String?  @db.VarChar(255)
  quantity     Int?
  shipping_fee Decimal? @db.Decimal(10, 2)
  total_price  Decimal? @db.Decimal(10, 2)
  status       OrderStatus? @default(processing)

  order        Order?   @relation(fields: [order_id], references: [id])
  address      Address? @relation(fields: [address_id], references: [id])
  coupon       Coupon?  @relation(fields: [coupon_id], references: [id])
  stock        Stock?   @relation(fields: [stock_id], references: [id])

  @@map("order_details")
}

model Coupon {
  id             String    @id @default(uuid()) @db.VarChar(255)
  code           String?   @unique @db.VarChar(255)
  discount_type  DiscountType? @default(percentage)
  discount_value Decimal?  @db.Decimal(10, 2)
  usage_limit    Int?
  used_count     Int?
  start_date     DateTime? @db.DateTime(0)
  end_date       DateTime? @db.DateTime(0)
  created_at     DateTime? @db.Timestamp(6)
  updated_at     DateTime? @db.Timestamp(6)
  deleted_at     DateTime? @db.Timestamp(6)

  orderDetails   OrderDetail[]

  @@map("coupons")
}
